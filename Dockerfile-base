FROM debian:latest
MAINTAINER Tristan Salles

# install things
RUN apt-get update -qq && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        bash-completion \
        build-essential \
        cmake \
        curl \
        freeglut3 \
        freeglut3-dev \
        gdal-bin \
        gdb-minimal \
        gfortran \
        git \
        gmsh \
        less \
        libavcodec-dev \
        libavformat-dev \
        libavutil-dev \
        libfreetype6-dev \
        libgdal-dev \
        libgeos++ \
        libgeos-dev \
        libgl1-mesa-dri \
        libgl1-mesa-glx \
        libpng-dev \
        libproj-dev \
        libproj-dev \
        libswscale-dev \
        libxft-dev \
        libxml2-dev \
        mesa-utils \
        ne \
        python3-dbg \
        python3-dev \
        python3-gdal \
        python3-minimal \
        python3-pip \
        python3-setuptools \
        python3-tk \
        rsync \
        ssh \
        swig \
        vim \
        wget \
        xauth \
        xorg-dev \
        xvfb && \
#clean up install directories
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN pip3 install -U setuptools  && \
    pip3 install -U wheel       && \
    pip3 install --no-cache-dir packaging \
        appdirs \
        descartes \
        DoEgen \
        geopandas \
        geopy \
        gFlex>=1.1.0 \
        h5py>=2.8.0 \
        ipyparallel \
        ipython \
        ipython \
        jupyter \
        jupyter \
        lavavu 
        matplotlib \
        matplotlib>=3.0 \
        meshio \
        meshplex \
        mock \
        numpy \
        numpy>=1.15.0 \
        pandas \
        pandas>=0.24 \
        pathlib \
        pillow \
        pint \
        plotly \
        pygeotools \
        pygmsh \
        pyvirtualdisplay \
        pyvista \
        pvgeo \
        rasterio \
        ruamel.yaml \
        scikit-image>=0.15 \
        scipy \
        scipy>=1.2 \
        scons \
        setuptools>=38.4.0 \
        shapely \
        six>=1.11.0 \
        sphinx \
        sphinx_rtd_theme \
        sphinxcontrib-napoleon \
        tabulate \
        tribad \
        xlrd \
#        scikit-fuzzy


# LavaVu stuff
# script for xvfb-run.  all docker commands will effectively run under this via the entrypoint
RUN printf "#\041/bin/sh \n rm -f /tmp/.X99-lock && xvfb-run -s '-screen 0 1600x1200x16' \$@" >> /usr/local/bin/xvfbrun.sh && \
chmod +x /usr/local/bin/xvfbrun.sh

# expose notebook port
EXPOSE 8888

# expose lavavu port
EXPOSE 9999


# Install Tini.. this is required because CMD (below) doesn't play nice with notebooks for some reason: https://github.com/ipython/ipython/issues/7062, https://github.com/jupyter/notebook/issues/334
RUN curl -L https://github.com/krallin/tini/releases/download/v0.10.0/tini > tini && \
    echo "1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0 *tini" | sha256sum -c - && \
    mv tini /usr/local/bin/tini && \
    chmod +x /usr/local/bin/tini

# create a volume
RUN mkdir /live && \
    mkdir /live/lib
VOLUME /live/share
WORKDIR /live

# launch notebook
ADD run-jupyter.sh /usr/local/bin/run-jupyter.sh
RUN chmod +x /usr/local/bin/run-jupyter.sh
CMD /usr/local/bin/run-jupyter.sh